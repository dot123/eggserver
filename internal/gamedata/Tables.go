
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

package cfg;

type JsonLoader func(string) ([]map[string]interface{}, error)

type Tables struct {
    SceneInfo *SceneInfo
    ErrorTb *ErrorTb
    GlobalTb *GlobalTb
    RedPointTb *RedPointTb
    QualityTb *QualityTb
    GuideTb *GuideTb
    GuideListTb *GuideListTb
    UnlockTb *UnlockTb
    HelpTb *HelpTb
    ItemTb *ItemTb
    PetTb *PetTb
    TaskTypeTb *TaskTypeTb
    TaskTb *TaskTb
    EggTb *EggTb
    EggScoreTb *EggScoreTb
    EggOpenWeightTb *EggOpenWeightTb
    EggPart1Tb *EggPart1Tb
    EggPart2Tb *EggPart2Tb
    EggPart3Tb *EggPart3Tb
    BattleConfigTb *BattleConfigTb
    DailyShopTb *DailyShopTb
    OrdinaryShopTb *OrdinaryShopTb
    DiamondShopTb *DiamondShopTb
    SpecialShopTb *SpecialShopTb
    SignTb *SignTb
    ReSignTb *ReSignTb
    PassPortIssueTb *PassPortIssueTb
    PassPortRewardTb *PassPortRewardTb
}

func NewTables(loader JsonLoader) (*Tables, error) {
    var err error
    var buf []map[string]interface{}

    tables := &Tables{}
    if buf, err = loader("SceneInfo") ; err != nil {
        return nil, err
    }
    if tables.SceneInfo, err = NewSceneInfo(buf) ; err != nil {
        return nil, err
    }
    if buf, err = loader("ErrorTb") ; err != nil {
        return nil, err
    }
    if tables.ErrorTb, err = NewErrorTb(buf) ; err != nil {
        return nil, err
    }
    if buf, err = loader("GlobalTb") ; err != nil {
        return nil, err
    }
    if tables.GlobalTb, err = NewGlobalTb(buf) ; err != nil {
        return nil, err
    }
    if buf, err = loader("RedPointTb") ; err != nil {
        return nil, err
    }
    if tables.RedPointTb, err = NewRedPointTb(buf) ; err != nil {
        return nil, err
    }
    if buf, err = loader("QualityTb") ; err != nil {
        return nil, err
    }
    if tables.QualityTb, err = NewQualityTb(buf) ; err != nil {
        return nil, err
    }
    if buf, err = loader("GuideTb") ; err != nil {
        return nil, err
    }
    if tables.GuideTb, err = NewGuideTb(buf) ; err != nil {
        return nil, err
    }
    if buf, err = loader("GuideListTb") ; err != nil {
        return nil, err
    }
    if tables.GuideListTb, err = NewGuideListTb(buf) ; err != nil {
        return nil, err
    }
    if buf, err = loader("UnlockTb") ; err != nil {
        return nil, err
    }
    if tables.UnlockTb, err = NewUnlockTb(buf) ; err != nil {
        return nil, err
    }
    if buf, err = loader("HelpTb") ; err != nil {
        return nil, err
    }
    if tables.HelpTb, err = NewHelpTb(buf) ; err != nil {
        return nil, err
    }
    if buf, err = loader("ItemTb") ; err != nil {
        return nil, err
    }
    if tables.ItemTb, err = NewItemTb(buf) ; err != nil {
        return nil, err
    }
    if buf, err = loader("PetTb") ; err != nil {
        return nil, err
    }
    if tables.PetTb, err = NewPetTb(buf) ; err != nil {
        return nil, err
    }
    if buf, err = loader("TaskTypeTb") ; err != nil {
        return nil, err
    }
    if tables.TaskTypeTb, err = NewTaskTypeTb(buf) ; err != nil {
        return nil, err
    }
    if buf, err = loader("TaskTb") ; err != nil {
        return nil, err
    }
    if tables.TaskTb, err = NewTaskTb(buf) ; err != nil {
        return nil, err
    }
    if buf, err = loader("EggTb") ; err != nil {
        return nil, err
    }
    if tables.EggTb, err = NewEggTb(buf) ; err != nil {
        return nil, err
    }
    if buf, err = loader("EggScoreTb") ; err != nil {
        return nil, err
    }
    if tables.EggScoreTb, err = NewEggScoreTb(buf) ; err != nil {
        return nil, err
    }
    if buf, err = loader("EggOpenWeightTb") ; err != nil {
        return nil, err
    }
    if tables.EggOpenWeightTb, err = NewEggOpenWeightTb(buf) ; err != nil {
        return nil, err
    }
    if buf, err = loader("EggPart1Tb") ; err != nil {
        return nil, err
    }
    if tables.EggPart1Tb, err = NewEggPart1Tb(buf) ; err != nil {
        return nil, err
    }
    if buf, err = loader("EggPart2Tb") ; err != nil {
        return nil, err
    }
    if tables.EggPart2Tb, err = NewEggPart2Tb(buf) ; err != nil {
        return nil, err
    }
    if buf, err = loader("EggPart3Tb") ; err != nil {
        return nil, err
    }
    if tables.EggPart3Tb, err = NewEggPart3Tb(buf) ; err != nil {
        return nil, err
    }
    if buf, err = loader("BattleConfigTb") ; err != nil {
        return nil, err
    }
    if tables.BattleConfigTb, err = NewBattleConfigTb(buf) ; err != nil {
        return nil, err
    }
    if buf, err = loader("DailyShopTb") ; err != nil {
        return nil, err
    }
    if tables.DailyShopTb, err = NewDailyShopTb(buf) ; err != nil {
        return nil, err
    }
    if buf, err = loader("OrdinaryShopTb") ; err != nil {
        return nil, err
    }
    if tables.OrdinaryShopTb, err = NewOrdinaryShopTb(buf) ; err != nil {
        return nil, err
    }
    if buf, err = loader("DiamondShopTb") ; err != nil {
        return nil, err
    }
    if tables.DiamondShopTb, err = NewDiamondShopTb(buf) ; err != nil {
        return nil, err
    }
    if buf, err = loader("SpecialShopTb") ; err != nil {
        return nil, err
    }
    if tables.SpecialShopTb, err = NewSpecialShopTb(buf) ; err != nil {
        return nil, err
    }
    if buf, err = loader("SignTb") ; err != nil {
        return nil, err
    }
    if tables.SignTb, err = NewSignTb(buf) ; err != nil {
        return nil, err
    }
    if buf, err = loader("ReSignTb") ; err != nil {
        return nil, err
    }
    if tables.ReSignTb, err = NewReSignTb(buf) ; err != nil {
        return nil, err
    }
    if buf, err = loader("PassPortIssueTb") ; err != nil {
        return nil, err
    }
    if tables.PassPortIssueTb, err = NewPassPortIssueTb(buf) ; err != nil {
        return nil, err
    }
    if buf, err = loader("PassPortRewardTb") ; err != nil {
        return nil, err
    }
    if tables.PassPortRewardTb, err = NewPassPortRewardTb(buf) ; err != nil {
        return nil, err
    }
    return tables, nil
}


